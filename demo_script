"""
demo_script.py
===============
Demo runner for the Heart Rate Analyzer pipeline.

Educational overview:
---------------------
This script demonstrates how all modules fit together:
1. Simulate or load a signal
2. Filter it
3. Detect peaks
4. Compute HR and HRV
5. Classify rhythm
6. Visualize results
"""

from data import simulate_ecg
from filtering import butter_lowpass_filter, moving_average
from analysis import detect_peaks, compute_hr_and_rr, compute_hrv, classify_rhythm
from plotting import plot_raw_vs_filtered, plot_tachogram

# Step 1: Simulate ECG signal
t, raw, fs = simulate_ecg(duration=20, fs=250, heart_rate_bpm=70, noise_std=0.3, random_seed=1)

# Step 2: Filtering
filtered = butter_lowpass_filter(raw, cutoff_hz=15, fs=fs, order=4)
smooth = moving_average(filtered, window_size=3)

# Step 3: Peak detection
peaks, props = detect_peaks(smooth, fs, prominence=0.3)

# Step 4: HR and HRV computation
hr, rr = compute_hr_and_rr(peaks, t)
sdnn = compute_hrv(rr)
status = classify_rhythm(hr, sdnn)

# Step 5: Display numerical results
print(f"Detected HR: {hr:.1f} bpm")
print(f"HRV (SDNN): {sdnn:.1f} ms")
print(f"Rhythm classification: {status}")

# Step 6: Plot results
plot_raw_vs_filtered(t, raw, smooth, peaks)
plot_tachogram(rr)
